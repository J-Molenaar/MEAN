Before starting make sure to create a git ignore and push file to github.
	touch .gitignore
	git init
  	git add --all
  	git commit -m "initial commit"
	git remote add origin https://github.com/NAMEofREPOhere
 	git push origin master

1. *-- Set up AWS --*
	Enter AWS, click on EC2, and click launch new instance.
	Select Ubuntu 16.04 LTS
	Select t2.micro
	Edit security settings:
		ssh 0.0.0.0, (Anywhere or myIP)
		http 0.0.0.0 (Anywhere)
		https 0.0.0.0 (Anywhere, or don't set it)

	Download a .pem key from AWS
	Move the .pem file to an appropriate folder on your system
	
	View Instances
	Click “Connect”

2. *-- Get into Ubuntu Server: --*
	Launch Terminal
	Navigate to the folder where your .pem file is!
	(you can use the ‘connect’ button on Amazon AWS to get the next line of code)
	run chmod line in terminal shown on popup window from AWS
	run ssh -i line in terminal  // Ex: ssh -i "pem-friends.pem" ubuntu@ec2-54-202-98-79.us-west-2.compute.amazonaws.com

	now you should be connected to Ubuntu :)

3. *-- Set up Ubuntu --*
In the ubuntu terminal: These establish some basic dependencies for deployment and the Linux server.

	sudo apt-get update
	sudo apt-get install -y build-essential openssl libssl-dev pkg-config

	sudo apt-get install -y nodejs    // if the first doesnt work use:  sudo apt-get install -y nodejs-legacy

	sudo apt-get install npm
	sudo npm cache clean -f

In the ubuntu terminal: These install the node package manager n and updated node.

	sudo npm install -g n
	sudo n stable

Install NGINX and git:

	sudo apt-get install nginx
	sudo apt-get install git

Enter main folder:

	cd /var/www

Clone the project:

	sudo git clone {{project file path on github}}

4. **--Set up NGINX --**
Go to nginx’s sites-available directory :

	cd /etc/nginx/sites-available

Enter vim:

	sudo vim {{project_name}} or sudo nano project name

Paste and modify the following code into vim after hitting i:

\\\\\NOTE: {{PRIVATE-IP}} MUST BE REPLACED WITH THE PRIVATE IP FROM AWS///////

server {
    listen 80;
    location / {
        proxy_pass http://{{PRIVATE-IP}}:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

	—VIM Notes:—
	Once you have entered the editor interface, press i to enter INSERT mode. You should see –INSERT– at the bottom left corner 	of your terminal. Now use your arrow keys to move the cursor to where you want to edit and make your changes.

	Once you are done, press the esc key to exit INSERT mode. Type a colon to enter the vim command interface. You should now 	see a colon at the bottom left corner of your terminal. Now, type wq and press return to write (save) and quit.

	If you want to quit without saving, type q! after the colon.

	If you'd like to save without quitting, type w after the colon.

Remove the defaults from /etc/nginx/sites-available  // should already be there, otherwise cd in

	sudo rm default

Create a symbolic link from sites-enabled to sites available:

	sudo ln -s /etc/nginx/sites-available/{{project_name}} /etc/nginx/sites-enabled/{{project_name}}
	/// Note the 2 places project name must be inserted & there is a SPACE after the 1st project name!!!!!!

Remove the defaults from /etc/nginx/sites-enabled/

	cd /etc/nginx/sites-enabled/
	sudo rm default

5. *-- Project Dependencies and PM2 --*
Install pm2 globally:

	sudo npm install pm2 -g

Install components! Including angular2 crap!

	cd into project folder // i.e. cd /var/www/Wall
	sudo npm install

	cd client
	sudo npm install -g @angular/cli
	sudo npm install
	sudo ng  build

6. *--Mongodb (b^-^)b --*

Set up a key:

	sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6

Setup mongodb in a source list:

	echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list

Reupdate to integrate mongo

	sudo apt-get update

install mongo:

	sudo apt-get install -y mongodb-org

*--create the stupid data/db folders:--*

	cd /
	sudo mkdir data
	cd data
	sudo mkdir db

Try starting Mongo:

	sudo mongod  // yay, mongo!  now close it with ctrl + c

Now start Mongo as a service so it will run for all your fun shit:

 	sudo service mongod start   // if you need to stop it: sudo service mongod stop

get back in your project folder:

	cd /var/www/{{project_name}}

7 *-- LAUNCH! --*
now let's start all this shit and cross our fingers that this works:
pm
	pm2 start server.js
			//test with(Optional)
			pm2 stop 0
			pm2 restart 0
			/// check on it with pm2 status
	sudo service nginx reload && sudo service nginx restart
